{
  "id": "CVE-2020-11105",
  "published": "2020-03-30T22:15:15",
  "modified": "2023-11-29T07:45:27.645955",
  "details": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "repo_url": "https://github.com/uscilab/cereal",
  "cwes": [],
  "commits": [
    "02eace19a99ce3cd564ca4e379753d69af08c2c8"
  ]
}
