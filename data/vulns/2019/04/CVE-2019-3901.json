{
  "id": "CVE-2019-3901",
  "published": "2019-04-22T16:29:01",
  "modified": "2023-11-29T07:47:04.823952",
  "details": "A race condition in perf_event_open() allows local attackers to leak sensitive data from setuid programs. As no relevant locks (in particular the cred_guard_mutex) are held during the ptrace_may_access() call, it is possible for the specified target task to perform an execve() syscall with setuid execution before perf_event_alloc() actually attaches to it, allowing an attacker to bypass the ptrace_may_access() check and the perf_event_exit_task(current) call that is performed in install_exec_creds() during privileged execve() calls. This issue affects kernel versions before 4.8.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "repo_url": "https://github.com/torvalds/linux",
  "cwes": [],
  "commits": [
    "c16fa4f2ad19908a47c63d8fa436a1178438c7e7"
  ]
}
