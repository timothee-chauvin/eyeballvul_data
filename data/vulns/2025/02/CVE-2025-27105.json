{
  "id": "CVE-2025-27105",
  "published": "2025-02-21T22:15:13",
  "modified": "2025-03-29T08:58:28.810369",
  "details": "vyper is a Pythonic Smart Contract Language for the EVM. Vyper handles AugAssign statements by first caching the target location to avoid double evaluation. However, in the case when target is an access to a DynArray and the rhs modifies the array, the cached target will evaluate first, and the bounds check will not be re-evaluated during the write portion of the statement. This issue has been addressed in version 0.4.1 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo_url": "https://github.com/vyperlang/vyper",
  "cwes": [],
  "commits": [
    "42817806cadaffefed7bf9c8edd64abf439be4de",
    "59e1bdd9c6cac946002ad509225f282189663593"
  ]
}
