{
  "id": "CVE-2025-55214",
  "published": "2025-08-18T17:15:30",
  "modified": "2025-09-24T12:43:50.940610",
  "details": "Copier library and CLI app for rendering project templates. From 7.1.0 to before 9.9.1, Copier suggests that it's safe to generate a project from a safe template, i.e. one that doesn't use unsafe features like custom Jinja extensions which would require passing the --UNSAFE,--trust flag. As it turns out, a safe template can currently write files outside the destination path where a project shall be generated or updated. This is possible when rendering a generated directory structure whose rendered path is either a relative parent path or an absolute path. Constructing such paths is possible using Copier's builtin pathjoin Jinja filter and its builtin _copier_conf.sep variable, which is the platform-native path separator. This way, a malicious template author can create a template that overwrites arbitrary files (according to the user's write permissions), e.g., to cause havoc. This vulnerability is fixed in 9.9.1.",
  "repo_url": "https://github.com/copier-org/copier",
  "cwes": [],
  "commits": [
    "7f60a29f14d48251d7005344c7ec1bf87d5a6bce"
  ]
}
