{
  "id": "CVE-2021-46320",
  "published": "2022-02-04T12:15:07",
  "modified": "2023-11-29T09:07:29.191338",
  "details": "In OpenZeppelin <=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "repo_url": "https://github.com/openzeppelin/openzeppelin-contracts",
  "cwes": [],
  "commits": [
    "1d2e15fbd7314f4f60b47d97d9b852aacd5404f7"
  ]
}
